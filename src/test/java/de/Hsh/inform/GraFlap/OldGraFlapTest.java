package de.HsH.inform.GraFlap;

import de.HsH.inform.GraFlap.BlackBoxTestData;
import de.HsH.inform.GraFlap.GraFlap;
import org.junit.jupiter.api.*;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PrintStream;

/**
 * @author Mathias Sonderfeld
 * This is a start, but not every program part is covered.
 * Its better than nothing but does not verify total integrity of the code.
 * Current Method:
 * Repipe JVM wide System.out to an OutputStream Object.
 * Call GraFlap.main with String-Array as arguments.
 * Catch output from GraFlap collected by Outputstream and match against expected Result.
 * Reset Outputstream for next test.
 * After all tests reset System.out to default.
 * <p>
 * <p>
 * Test-Method could be changed if thats acceptable with common practices to:
 * - move System.out.println out of GraFlap.generateResult(). main would be easiest.
 * - test input parsers and Output Builders indipendently
 * - write a OutputBuilder for Tests that outputs an easier parsable format, csv or json maybe?
 * - test GraFLap.generateResult() with easier controllable Arguments Object and TestOutputBuilder
 */

public class OldGraFlapTest {
    private static PrintStream systemOut;
    private static final ByteArrayOutputStream capture = new ByteArrayOutputStream();
    private static final PrintStream captureStream = new PrintStream(capture);

    /**
     * repipe JVM wide System.out and backup correct System.out
     */
    @BeforeAll
    static void init() {
        systemOut = System.out;
        System.setOut(captureStream);
    }

    /**
     * call GraFlap with given arguments, capture output and return it, if no Exception is thrown by GraFlap.
     *
     * @param test the arguments to pass to GraFlap
     * @return the output of GraFlap
     */
    static String runGraFlapBlackBoxTest( BlackBoxTestData test ) {
        try {
            GraFlap.main(new String[]{test.getInput(), test.getStudentAnswer()});
            String ret = capture.toString().replaceAll("[\\r|\\n|\\n\\r]\\s+", "").trim();
            capture.reset();
            return ret;
        }catch(Exception e) {
            e.printStackTrace(systemOut);
            return "";
        }
    }

    @Test
    void testAutomatonForGivenLanguage() {
        BlackBoxTestData blackBoxTest = new BlackBoxTestData();
        blackBoxTest.setInput("Automat fuer gegebene Sprache#de#S -> A, A -> x B|y C, B -> x A|y D,C -> x D|y F, D -> x C|y G, F -> x G|y H, G -> x F|y J, H -> x J| y H | E, J -> x H|y J#agtw#fa#55#yyy%yyyy%xxyyy%xyxyy%xyyxy%xyyyx%yxxyy%yxyxy%yxyyx%yyxxy%yyxyx%yyyxx%yyyyy%xxyyyy%xyxyyy%xyyxyy%xyyyxy%xyyyyx%yxxyyy%yxyxyy%yxyyxy%yxyyyx!%y%xx%yx%yyx%xyy%yxx%xxy%xyx%xxyy%yxxy%yxxx%xyxx%yyxy%xyxy%xxxx%xyyy%xxxy%yyxx%xyxxx%xyxyx%yyyxy%xyyxx%yxxxy%xxxyy%xxyyx%yxxxx%xxxyx%yyxxx%xyxxy%xyyyy%xxyxy%xxyxx");
        blackBoxTest.setStudentAnswer("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!--Created with JFLAP 6.4.--><structure><type>fa</type><automaton><!--The list of states.--><state id=\"0\" name=\"s0\"><x>57.0</x><y>61.0</y><initial/></state><state id=\"1\" name=\"s1\"><x>200.0</x><y>65.0</y></state><state id=\"2\" name=\"s2\"><x>414.0</x><y>58.0</y></state><state id=\"3\" name=\"s4\"><x>53.0</x><y>188.0</y></state><state id=\"4\" name=\"s5\"><x>192.0</x><y>189.0</y></state><state id=\"5\" name=\"s6\"><x>404.0</x><y>188.0</y></state><state id=\"6\" name=\"s7\"><x>598.0</x><y>191.0</y></state><state id=\"7\" name=\"s3\"><x>593.0</x><y>57.0</y><final/></state><!--The list of transitions.--><transition><from>0</from><to>3</to><read>x</read></transition><transition><from>3</from><to>0</to><read>x</read></transition><transition><from>7</from><to>7</to><read>y</read></transition><transition><from>6</from><to>6</to><read>y</read></transition><transition><from>0</from><to>1</to><read>y</read></transition><transition><from>5</from><to>6</to><read>y</read></transition><transition><from>3</from><to>4</to><read>y</read></transition><transition><from>4</from><to>1</to><read>x</read></transition><transition><from>1</from><to>4</to><read>x</read></transition><transition><from>6</from><to>7</to><read>x</read></transition><transition><from>7</from><to>6</to><read>x</read></transition><transition><from>4</from><to>5</to><read>y</read></transition><transition><from>2</from><to>7</to><read>y</read></transition><transition><from>5</from><to>2</to><read>x</read></transition><transition><from>2</from><to>5</to><read>x</read></transition><transition><from>1</from><to>2</to><read>y</read></transition></automaton></structure> ");
        String expected = "<loncapagrade><awarddetail>EXACT_ANS</awarddetail><message><taskresult grade=\"passed\"><tasktitle>Automat fuer gegebene Sprache</tasktitle><titlesvg>Automat</titlesvg><imagesvg><![CDATA[<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"979pt\" height=\"280pt\" viewBox=\"0.00 0.00 978.56 279.77\"><g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 275.77)\"><title>automaton</title><polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-275.77 974.56,-275.77 974.56,4 -4,4\" /><!-- start --><g id=\"node1\" class=\"node\"><title>start</title></g><!-- 0 --><g id=\"node2\" class=\"node\"><title>0</title><ellipse fill=\"none\" stroke=\"black\" cx=\"171.08\" cy=\"-206.16\" rx=\"18.7\" ry=\"18.7\" /><text text-anchor=\"middle\" x=\"171.08\" y=\"-202.46\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s0</text></g><!-- start&#45;&gt;0 --><g id=\"edge1\" class=\"edge\"><title>start-&gt;0</title><path fill=\"none\" stroke=\"black\" d=\"M54.17,-206.16C79.12,-206.16 116.05,-206.16 141.7,-206.16\" /><polygon fill=\"black\" stroke=\"black\" points=\"141.94,-209.66 151.94,-206.16 141.94,-202.66 141.94,-209.66\" /></g><!-- 1 --><g id=\"node3\" class=\"node\"><title>1</title><ellipse fill=\"none\" stroke=\"black\" cx=\"377\" cy=\"-200.4\" rx=\"18.7\" ry=\"18.7\" /><text text-anchor=\"middle\" x=\"377\" y=\"-196.7\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s1</text></g><!-- 0&#45;&gt;1 --><g id=\"edge6\" class=\"edge\"><title>0-&gt;1</title><path fill=\"none\" stroke=\"black\" d=\"M190.08,-205.63C226.25,-204.62 305.17,-202.41 347.98,-201.21\" /><polygon fill=\"black\" stroke=\"black\" points=\"348.14,-204.71 358.04,-200.93 347.95,-197.71 348.14,-204.71\" /><text text-anchor=\"middle\" x=\"265.53\" y=\"-207.22\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">y</text></g><!-- 3 --><g id=\"node5\" class=\"node\"><title>3</title><ellipse fill=\"none\" stroke=\"black\" cx=\"165.32\" cy=\"-23.28\" rx=\"18.7\" ry=\"18.7\" /><text text-anchor=\"middle\" x=\"165.32\" y=\"-19.58\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s4</text></g><!-- 0&#45;&gt;3 --><g id=\"edge2\" class=\"edge\"><title>0-&gt;3</title><path fill=\"none\" stroke=\"black\" d=\"M175.69,-187.79C178.4,-155.77 176.65,-89.53 172.4,-51.59\" /><polygon fill=\"black\" stroke=\"black\" points=\"175.81,-50.72 171.07,-41.25 168.87,-51.61 175.81,-50.72\" /><text text-anchor=\"middle\" x=\"170.54\" y=\"-123.49\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">x</text></g><!-- 2 --><g id=\"node4\" class=\"node\"><title>2</title><ellipse fill=\"none\" stroke=\"black\" cx=\"685.16\" cy=\"-210.48\" rx=\"18.7\" ry=\"18.7\" /><text text-anchor=\"middle\" x=\"685.16\" y=\"-206.78\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s2</text></g><!-- 1&#45;&gt;2 --><g id=\"edge17\" class=\"edge\"><title>1-&gt;2</title><path fill=\"none\" stroke=\"black\" d=\"M396.28,-201.03C448.61,-202.74 593.57,-207.48 655.97,-209.53\" /><polygon fill=\"black\" stroke=\"black\" points=\"656.17,-213.03 666.28,-209.86 656.4,-206.04 656.17,-213.03\" /><text text-anchor=\"middle\" x=\"522.63\" y=\"-209.08\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">y</text></g><!-- 4 --><g id=\"node6\" class=\"node\"><title>4</title><ellipse fill=\"none\" stroke=\"black\" cx=\"365.48\" cy=\"-21.84\" rx=\"18.7\" ry=\"18.7\" /><text text-anchor=\"middle\" x=\"365.48\" y=\"-18.14\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s5</text></g><!-- 1&#45;&gt;4 --><g id=\"edge10\" class=\"edge\"><title>1-&gt;4</title><path fill=\"none\" stroke=\"black\" d=\"M381.05,-181.96C382.7,-150.57 378.9,-86.6 373.51,-49.73\" /><polygon fill=\"black\" stroke=\"black\" points=\"376.93,-48.96 371.87,-39.66 370.02,-50.09 376.93,-48.96\" /><text text-anchor=\"middle\" x=\"373.78\" y=\"-119.64\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">x</text></g><!-- 5 --><g id=\"node7\" class=\"node\"><title>5</title><ellipse fill=\"none\" stroke=\"black\" cx=\"670.76\" cy=\"-23.28\" rx=\"18.7\" ry=\"18.7\" /><text text-anchor=\"middle\" x=\"670.76\" y=\"-19.58\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s6</text></g><!-- 2&#45;&gt;5 --><g id=\"edge16\" class=\"edge\"><title>2-&gt;5</title><path fill=\"none\" stroke=\"black\" d=\"M688.88,-191.79C690.14,-158.71 685.15,-89.67 679.02,-51.02\" /><polygon fill=\"black\" stroke=\"black\" points=\"682.43,-50.22 677.26,-40.98 675.53,-51.43 682.43,-50.22\" /><text text-anchor=\"middle\" x=\"680.45\" y=\"-125.21\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">x</text></g><!-- 7 --><g id=\"node9\" class=\"node\"><title>7</title><ellipse fill=\"none\" stroke=\"black\" cx=\"942.92\" cy=\"-211.92\" rx=\"18.72\" ry=\"18.72\" /><ellipse fill=\"none\" stroke=\"black\" cx=\"942.92\" cy=\"-211.92\" rx=\"22.7\" ry=\"22.7\" /><text text-anchor=\"middle\" x=\"942.92\" y=\"-208.22\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s3</text></g><!-- 2&#45;&gt;7 --><g id=\"edge14\" class=\"edge\"><title>2-&gt;7</title><path fill=\"none\" stroke=\"black\" d=\"M704.11,-210.59C747.6,-210.83 855.01,-211.43 909.73,-211.73\" /><polygon fill=\"black\" stroke=\"black\" points=\"909.92,-215.24 919.94,-211.79 909.96,-208.24 909.92,-215.24\" /><text text-anchor=\"middle\" x=\"803.42\" y=\"-214.96\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">y</text></g><!-- 3&#45;&gt;0 --><g id=\"edge3\" class=\"edge\"><title>3-&gt;0</title><path fill=\"none\" stroke=\"black\" d=\"M160.71,-41.65C158,-73.67 159.75,-139.91 164,-177.85\" /><polygon fill=\"black\" stroke=\"black\" points=\"160.59,-178.72 165.33,-188.19 167.53,-177.83 160.59,-178.72\" /><text text-anchor=\"middle\" x=\"158.86\" y=\"-113.55\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">x</text></g><!-- 3&#45;&gt;4 --><g id=\"edge8\" class=\"edge\"><title>3-&gt;4</title><path fill=\"none\" stroke=\"black\" d=\"M184.51,-23.14C219.71,-22.89 294.77,-22.35 336.31,-22.05\" /><polygon fill=\"black\" stroke=\"black\" points=\"336.37,-25.55 346.35,-21.98 336.32,-18.55 336.37,-25.55\" /><text text-anchor=\"middle\" x=\"256.91\" y=\"-26.4\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">y</text></g><!-- 4&#45;&gt;1 --><g id=\"edge9\" class=\"edge\"><title>4-&gt;1</title><path fill=\"none\" stroke=\"black\" d=\"M361.43,-40.28C359.78,-71.67 363.58,-135.64 368.97,-172.51\" /><polygon fill=\"black\" stroke=\"black\" points=\"365.55,-173.28 370.61,-182.58 372.46,-172.15 365.55,-173.28\" /><text text-anchor=\"middle\" x=\"361.7\" y=\"-110.2\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">x</text></g><!-- 4&#45;&gt;5 --><g id=\"edge13\" class=\"edge\"><title>4-&gt;5</title><path fill=\"none\" stroke=\"black\" d=\"M384.58,-21.93C436.3,-22.17 579.35,-22.85 641.41,-23.14\" /><polygon fill=\"black\" stroke=\"black\" points=\"641.65,-26.64 651.67,-23.19 641.69,-19.64 641.65,-26.64\" /><text text-anchor=\"middle\" x=\"509.49\" y=\"-26.34\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">y</text></g><!-- 5&#45;&gt;2 --><g id=\"edge15\" class=\"edge\"><title>5-&gt;2</title><path fill=\"none\" stroke=\"black\" d=\"M667.04,-41.97C665.78,-75.05 670.77,-144.09 676.9,-182.74\" /><polygon fill=\"black\" stroke=\"black\" points=\"673.49,-183.54 678.66,-192.78 680.39,-182.33 673.49,-183.54\" /><text text-anchor=\"middle\" x=\"668.47\" y=\"-116.15\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">x</text></g><!-- 6 --><g id=\"node8\" class=\"node\"><title>6</title><ellipse fill=\"none\" stroke=\"black\" cx=\"950.12\" cy=\"-18.96\" rx=\"18.7\" ry=\"18.7\" /><text text-anchor=\"middle\" x=\"950.12\" y=\"-15.26\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s7</text></g><!-- 5&#45;&gt;6 --><g id=\"edge7\" class=\"edge\"><title>5-&gt;6</title><path fill=\"none\" stroke=\"black\" d=\"M689.96,-22.98C738.02,-22.24 863.74,-20.3 920.98,-19.41\" /><polygon fill=\"black\" stroke=\"black\" points=\"921.21,-22.91 931.15,-19.25 921.1,-15.91 921.21,-22.91\" /><text text-anchor=\"middle\" x=\"801.97\" y=\"-25\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">y</text></g><!-- 6&#45;&gt;6 --><g id=\"edge5\" class=\"edge\"><title>6:ne-&gt;6:nw</title><path fill=\"none\" stroke=\"black\" d=\"M963.12,-31.96C974.12,-45.14 974.12,-59.81 950.12,-59.81 931.37,-59.81 927.27,-50.86 931.62,-40.65\" /><polygon fill=\"black\" stroke=\"black\" points=\"934.73,-42.28 937.12,-31.96 928.81,-38.54 934.73,-42.28\" /><text text-anchor=\"middle\" x=\"950.12\" y=\"-63.61\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">y</text></g><!-- 6&#45;&gt;7 --><g id=\"edge11\" class=\"edge\"><title>6-&gt;7</title><path fill=\"none\" stroke=\"black\" d=\"M944.38,-36.92C939.4,-69.41 936.4,-138.33 937.78,-179.32\" /><polygon fill=\"black\" stroke=\"black\" points=\"934.29,-179.52 938.24,-189.35 941.28,-179.2 934.29,-179.52\" /><text text-anchor=\"middle\" x=\"937.58\" y=\"-111.92\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">x</text></g><!-- 7&#45;&gt;6 --><g id=\"edge12\" class=\"edge\"><title>7-&gt;6</title><path fill=\"none\" stroke=\"black\" d=\"M949.29,-189.61C954.04,-154.48 956.76,-86.29 955.11,-47.59\" /><polygon fill=\"black\" stroke=\"black\" points=\"958.6,-47.29 954.52,-37.51 951.61,-47.7 958.6,-47.29\" /><text text-anchor=\"middle\" x=\"948.7\" y=\"-122.4\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">x</text></g><!-- 7&#45;&gt;7 --><g id=\"edge4\" class=\"edge\"><title>7:ne-&gt;7:nw</title><path fill=\"none\" stroke=\"black\" d=\"M958.92,-227.92C969.92,-242.1 969.92,-256.77 942.92,-256.77 921.4,-256.77 917.03,-247.45 921.71,-236.49\" /><polygon fill=\"black\" stroke=\"black\" points=\"924.72,-238.28 926.92,-227.92 918.74,-234.65 924.72,-238.28\" /><text text-anchor=\"middle\" x=\"942.92\" y=\"-260.57\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">y</text></g></g></svg>]]></imagesvg><resulttext /></taskresult></message></loncapagrade>";
        Assertions.assertEquals(expected, runGraFlapBlackBoxTest(blackBoxTest));
    }

    @Test
    void testAutomatonForRegex() {
        BlackBoxTestData blackBoxTest = new BlackBoxTestData();
        blackBoxTest.setInput("Automat fuer e^n f^n#de#S->eSf|ef#agtw#pda#64#ef%eeff%eeefff%eeeeffff%eeeeefffff%eeeeeeffffff%eeeeeeefffffff%eeeeeeeeffffffff%eeeeeeeeefffffffff%eeeeeeeeeeffffffffff%eeeeeeeeeeefffffffffff%eeeeeeeeeeeeffffffffffff%eeeeeeeeeeeeefffffffffffff%eeeeeeeeeeeeeeffffffffffffff%eeeeeeeeeeeeeeefffffffffffffff%eeeeeeeeeeeeeeeeffffffffffffffff%eeeeeeeeeeeeeeeeefffffffffffffffff%eeeeeeeeeeeeeeeeeeffffffffffffffffff%eeeeeeeeeeeeeeeeeeefffffffffffffffffff%eeeeeeeeeeeeeeeeeeeeffffffffffffffffffff%eeeeeeeeeeeeeeeeeeeeefffffffffffffffffffff%eeeeeeeeeeeeeeeeeeeeeeffffffffffffffffffffff!%f%e%ee%efe%eff%eee%fef%fee%ffe%ffee%eeef%fefe%ffef%efee%feef%feff%efef%efffe%efeee%eefee%ffeee%eefff%efefe%effef%fefff%efeff%feffe%ffffe%fefee%eefef%ffeef%eeeff%eeefe%eeeee%feeff%feeffe%eefeff%fefefe%fefeef%effeef%efefef");
        blackBoxTest.setStudentAnswer("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!--Created with JFLAP 6.4.--><structure><type>pda</type><automaton><!--The list of states.--><state id=\"0\" name=\"q0\"><x>34.0</x><y>122.0</y><initial/></state><state id=\"1\" name=\"q1\"><x>177.0</x><y>117.0</y></state><state id=\"2\" name=\"q2\"><x>317.0</x><y>112.0</y></state><state id=\"3\" name=\"q3\"><x>465.0</x><y>108.0</y><final/></state><!--The list of transitions.--><transition><from>2</from><to>2</to><read>f</read><pop>e</pop><push/></transition><transition><from>1</from><to>2</to><read>f</read><pop>e</pop><push/></transition><transition><from>0</from><to>1</to><read>e</read><pop>Z</pop><push>e Z</push></transition><transition><from>1</from><to>1</to><read>e</read><pop>e</pop><push>ee</push></transition><transition><from>2</from><to>3</to><read/><pop>Z</pop><push/></transition></automaton></structure>");
        String expected = "<loncapagrade><awarddetail>EXACT_ANS</awarddetail><message><taskresult grade=\"passed\"><tasktitle>Automat fuer e^n f^n</tasktitle><titlesvg>Automat</titlesvg><imagesvg><![CDATA[<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"824pt\" height=\"100pt\" viewBox=\"0.00 0.00 824.00 99.87\"><g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 95.87)\"><title>automaton</title><polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-95.87 820,-95.87 820,4 -4,4\" /><!-- start --><g id=\"node1\" class=\"node\"><title>start</title></g><!-- 0 --><g id=\"node2\" class=\"node\"><title>0</title><ellipse fill=\"none\" stroke=\"black\" cx=\"170.96\" cy=\"-20.32\" rx=\"20.3\" ry=\"20.3\" /><text text-anchor=\"middle\" x=\"170.96\" y=\"-16.62\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">q0</text></g><!-- start&#45;&gt;0 --><g id=\"edge1\" class=\"edge\"><title>start-&gt;0</title><path fill=\"none\" stroke=\"black\" d=\"M54.05,-20.32C78.57,-20.32 114.67,-20.32 140.25,-20.32\" /><polygon fill=\"black\" stroke=\"black\" points=\"140.51,-23.82 150.51,-20.32 140.51,-16.82 140.51,-23.82\" /></g><!-- 1 --><g id=\"node3\" class=\"node\"><title>1</title><ellipse fill=\"none\" stroke=\"black\" cx=\"376.88\" cy=\"-27.52\" rx=\"20.3\" ry=\"20.3\" /><text text-anchor=\"middle\" x=\"376.88\" y=\"-23.82\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">q1</text></g><!-- 0&#45;&gt;1 --><g id=\"edge4\" class=\"edge\"><title>0-&gt;1</title><path fill=\"none\" stroke=\"black\" d=\"M191.46,-21.04C227.84,-22.31 303.89,-24.97 346.42,-26.45\" /><polygon fill=\"black\" stroke=\"black\" points=\"346.35,-29.95 356.47,-26.81 346.59,-22.96 346.35,-29.95\" /><text text-anchor=\"middle\" x=\"241.44\" y=\"-27.55\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">e , Z ; e Z</text></g><!-- 1&#45;&gt;1 --><g id=\"edge5\" class=\"edge\"><title>1:ne-&gt;1:nw</title><path fill=\"none\" stroke=\"black\" d=\"M390.88,-41.52C401.88,-55 401.88,-69.67 376.88,-69.67 357.15,-69.67 352.99,-60.54 357.52,-50.06\" /><polygon fill=\"black\" stroke=\"black\" points=\"360.53,-51.85 362.88,-41.52 354.6,-48.13 360.53,-51.85\" /><text text-anchor=\"middle\" x=\"376.88\" y=\"-73.47\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">e , e ; ee</text></g><!-- 2 --><g id=\"node4\" class=\"node\"><title>2</title><ellipse fill=\"none\" stroke=\"black\" cx=\"578.48\" cy=\"-34.72\" rx=\"20.3\" ry=\"20.3\" /><text text-anchor=\"middle\" x=\"578.48\" y=\"-31.02\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">q2</text></g><!-- 1&#45;&gt;2 --><g id=\"edge3\" class=\"edge\"><title>1-&gt;2</title><path fill=\"none\" stroke=\"black\" d=\"M397.32,-28.25C432.96,-29.52 506.62,-32.15 548.2,-33.64\" /><polygon fill=\"black\" stroke=\"black\" points=\"548.17,-37.14 558.29,-34 548.42,-30.14 548.17,-37.14\" /><text text-anchor=\"middle\" x=\"451.76\" y=\"-34.74\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">f , e ; E</text></g><!-- 2&#45;&gt;2 --><g id=\"edge2\" class=\"edge\"><title>2:ne-&gt;2:nw</title><path fill=\"none\" stroke=\"black\" d=\"M592.48,-48.72C603.48,-62.2 603.48,-76.87 578.48,-76.87 558.75,-76.87 554.59,-67.74 559.12,-57.26\" /><polygon fill=\"black\" stroke=\"black\" points=\"562.13,-59.05 564.48,-48.72 556.2,-55.33 562.13,-59.05\" /><text text-anchor=\"middle\" x=\"578.48\" y=\"-80.67\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">f , e ; E</text></g><!-- 3 --><g id=\"node5\" class=\"node\"><title>3</title><ellipse fill=\"none\" stroke=\"black\" cx=\"791.6\" cy=\"-40.48\" rx=\"20.27\" ry=\"20.27\" /><ellipse fill=\"none\" stroke=\"black\" cx=\"791.6\" cy=\"-40.48\" rx=\"24.3\" ry=\"24.3\" /><text text-anchor=\"middle\" x=\"791.6\" y=\"-36.78\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">q3</text></g><!-- 2&#45;&gt;3 --><g id=\"edge6\" class=\"edge\"><title>2-&gt;3</title><path fill=\"none\" stroke=\"black\" d=\"M598.91,-35.27C635.47,-36.26 712.41,-38.34 757.22,-39.55\" /><polygon fill=\"black\" stroke=\"black\" points=\"757.25,-43.05 767.34,-39.82 757.44,-36.06 757.25,-43.05\" /><text text-anchor=\"middle\" x=\"654.07\" y=\"-41.21\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">E , Z ; E</text></g></g></svg>]]></imagesvg><resulttext /></taskresult></message></loncapagrade>";
        Assertions.assertEquals(expected, runGraFlapBlackBoxTest(blackBoxTest));
    }

    /**
     * Error in Input-Parameters.
     */
    @Disabled
    @Test
    void testAutomatonForCombinedLanguage() {
        BlackBoxTestData blackBoxTest = new BlackBoxTestData();
        blackBoxTest.setInput("Automat fuer Worte einer zusammengesetzten Sprache#de#(g|h)*|(hi)*#art#fa#0#-");
        blackBoxTest.setStudentAnswer("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!--Created with JFLAP 6.4.--><structure><type>fa</type><automaton><!--The list of states.--><state id=\"0\" name=\"s0\"><x>48.0</x><y>143.0</y><initial/></state><state id=\"1\" name=\"s1\"><x>208.0</x><y>64.0</y><final/></state><state id=\"2\" name=\"s2\"><x>210.0</x><y>185.0</y><final/></state><state id=\"3\" name=\"s3\"><x>360.0</x><y>187.0</y></state><!--The list of transitions.--><transition><from>0</from><to>1</to><read/></transition><transition><from>1</from><to>1</to><read>h </read></transition><transition><from>0</from><to>2</to><read/></transition><transition><from>1</from><to>1</to><read>g </read></transition><transition><from>2</from><to>3</to><read>h </read></transition><transition><from>3</from><to>2</to><read>i </read></transition></automaton></structure>");
        String expected = "";
        Assertions.assertEquals(expected, runGraFlapBlackBoxTest(blackBoxTest));
    }

    @Test
    void testAutomatonForEvenNumberOfW() {
        BlackBoxTestData blackBoxTest = new BlackBoxTestData();
        blackBoxTest.setInput("Automat fuer gerade Anzahl von w#de#x*(x*wx*wx*)*#artw#dfa#20#xxxxxxx%xxxxxxxxxxxwxwxxwxwxxwxwxxwxwxxwxwxxwxw%xxxwxxxxwxxxxwxxxxwxxxxwxxxxwxxxxwxxxxwxxxxwxxxxwxxxxwxxxxwxxxxwxxxxwxxxxwxxxxwxxxxwxxxxwxxx%xxxxxxxxwxxxxxwxxxxxxxwxxxxxwxxxxxxxwxxxxxwxxxxxxxwxxxxxwxxxxxxxwxxxxxwxxxxxxxwxxxxxwxxxxxxxwxxxxxwxx%xxxxxxxxxxxxwxwxxxxxxxxxxxxxwxwxxxxxxxxxxxxxwxwxxxxxxxxxxxxxwxwxxxxxxxxxxxxxwxwxxxxxxxxxxxxxwxwxxxxxxx!w%xw%xwx%www%wxww%xwxx%wwwx%xxwxxx%wxxxww%xwwxxwx%wwxwwxwx%wxxxwwww%wxxxwwxww%wxxwwxwxxw%xxxxwwwwxw");
        blackBoxTest.setStudentAnswer("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!--Created with JFLAP 6.4.--><structure>&#13;<type>fa</type>&#13;<automaton>&#13;<!--The list of states.-->&#13;<state id=\"0\" name=\"s0\">&#13;<x>82.0</x>&#13;<y>90.0</y>&#13;<initial/>&#13;<final/>&#13;</state>&#13;<state id=\"1\" name=\"s1\">&#13;<x>180.0</x>&#13;<y>90.0</y>&#13;</state>&#13;<!--The list of transitions.-->&#13;<transition>&#13;<from>0</from>&#13;<to>1</to>&#13;<read>w</read>&#13;</transition>&#13;<transition>&#13;<from>1</from>&#13;<to>0</to>&#13;<read>w</read>&#13;</transition>&#13;<transition>&#13;<from>0</from>&#13;<to>0</to>&#13;<read>x</read>&#13;</transition>&#13;<transition>&#13;<from>1</from>&#13;<to>1</to>&#13;<read>x</read>&#13;</transition>&#13;</automaton>&#13;</structure>");
        String expected = "<loncapagrade><awarddetail>EXACT_ANS</awarddetail><message><taskresult grade=\"passed\"><tasktitle>Automat fuer gerade Anzahl von w</tasktitle><titlesvg>Automat</titlesvg><imagesvg><![CDATA[<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"341pt\" height=\"90pt\" viewBox=\"0.00 0.00 340.64 90.25\"><g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 86.25)\"><title>automaton</title><polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-86.25 336.64,-86.25 336.64,4 -4,4\" /><!-- start --><g id=\"node1\" class=\"node\"><title>start</title></g><!-- 0 --><g id=\"node2\" class=\"node\"><title>0</title><ellipse fill=\"none\" stroke=\"black\" cx=\"171.08\" cy=\"-22.4\" rx=\"18.72\" ry=\"18.72\" /><ellipse fill=\"none\" stroke=\"black\" cx=\"171.08\" cy=\"-22.4\" rx=\"22.7\" ry=\"22.7\" /><text text-anchor=\"middle\" x=\"171.08\" y=\"-18.7\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s0</text></g><!-- start&#45;&gt;0 --><g id=\"edge1\" class=\"edge\"><title>start-&gt;0</title><path fill=\"none\" stroke=\"black\" d=\"M54.17,-22.4C77.83,-22.4 112.28,-22.4 137.66,-22.4\" /><polygon fill=\"black\" stroke=\"black\" points=\"137.92,-25.9 147.92,-22.4 137.92,-18.9 137.92,-25.9\" /></g><!-- 0&#45;&gt;0 --><g id=\"edge4\" class=\"edge\"><title>0:ne-&gt;0:nw</title><path fill=\"none\" stroke=\"black\" d=\"M187.08,-38.4C198.08,-52.58 198.08,-67.25 171.08,-67.25 149.56,-67.25 145.19,-57.93 149.87,-46.97\" /><polygon fill=\"black\" stroke=\"black\" points=\"152.88,-48.76 155.08,-38.4 146.9,-45.13 152.88,-48.76\" /><text text-anchor=\"middle\" x=\"171.08\" y=\"-71.05\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">x</text></g><!-- 1 --><g id=\"node3\" class=\"node\"><title>1</title><ellipse fill=\"none\" stroke=\"black\" cx=\"312.2\" cy=\"-22.4\" rx=\"18.7\" ry=\"18.7\" /><text text-anchor=\"middle\" x=\"312.2\" y=\"-18.7\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s1</text></g><!-- 0&#45;&gt;1 --><g id=\"edge2\" class=\"edge\"><title>0-&gt;1</title><path fill=\"none\" stroke=\"black\" d=\"M193.13,-28.59C217.52,-31.12 256.9,-31.32 283.64,-29.18\" /><polygon fill=\"black\" stroke=\"black\" points=\"284.29,-32.63 293.9,-28.16 283.6,-25.67 284.29,-32.63\" /><text text-anchor=\"middle\" x=\"233.38\" y=\"-32.68\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">w</text></g><!-- 1&#45;&gt;0 --><g id=\"edge3\" class=\"edge\"><title>1-&gt;0</title><path fill=\"none\" stroke=\"black\" d=\"M294.04,-16.65C271.2,-13.84 231.58,-13.4 203.49,-15.33\" /><polygon fill=\"black\" stroke=\"black\" points=\"203.02,-11.86 193.35,-16.19 203.61,-18.83 203.02,-11.86\" /><text text-anchor=\"middle\" x=\"243.77\" y=\"-19.79\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">w</text></g><!-- 1&#45;&gt;1 --><g id=\"edge5\" class=\"edge\"><title>1:ne-&gt;1:nw</title><path fill=\"none\" stroke=\"black\" d=\"M325.2,-35.4C336.2,-48.58 336.2,-63.25 312.2,-63.25 293.45,-63.25 289.35,-54.3 293.7,-44.09\" /><polygon fill=\"black\" stroke=\"black\" points=\"296.81,-45.72 299.2,-35.4 290.89,-41.98 296.81,-45.72\" /><text text-anchor=\"middle\" x=\"312.2\" y=\"-67.05\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">x</text></g></g></svg>]]></imagesvg><resulttext /></taskresult></message></loncapagrade>";
        Assertions.assertEquals(expected, runGraFlapBlackBoxTest(blackBoxTest));
    }

    @Test
    void testAutomatonForBinaryNumbers() {
        BlackBoxTestData blackBoxTest = new BlackBoxTestData();
        blackBoxTest.setInput("Automat fuer den Vergleich von Dualzahlen#de#(00|11)*10(00|01|10|11)*#artw#fa#80#0010%111100000010%1100111111110011001100001110001100%0000110011001111001110101010010111%1100000000001100000011111110111010%0000000010001110011010000110111100%11111001010110100111111101011010001011%10110110101111110101001111001110010010%11111010001001100001001011001101100000%001111111100110000001111101100000101110011%000000100110110111000001000010111110011000%11101010100110000111110001111101110000110101%000000000011000011111100110000000011101011101111%00111111111111110000000000110010000000100001011000%0011110011100110101100001101010101000000000000111111%110011111100000011000011110000000011111110100111011101%110000001111111111001111111111001100100000001111110000%00111111000000110000000000111111111100101011100000000001%00111100110011000000110011110000100001000110100110001101010110010010%1111111100111100110011111111000011001000000010000111101000111000100111!%1%0%11%01%110%111%100%000%010%0110%0000%1111%01111%01110%01001%011000%000001%1111100%0001110%0010011%01011101%11000001%00010110%011001001%111001010%111101000%110001110%111000010%0001111000%1111011000%11011110010%10000110010%110101000000%1101101000100%1010000101000%0110100001010%1010011010100%0011111101110%0100101101000%01111100111100%00000011110111%01000010101100%01110110010100%01100111100011%111110000111001%000000000100101%000011011001001%0110101111100101%1100110011001101%1101011100011010%0000010101100000%01111000010000001%11011000110111011%00001010001011101%00011111001000010%000111100011001101%0001101001010110011%01011001110000110000%00000011011000100101");
        blackBoxTest.setStudentAnswer("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!--Created with JFLAP 6.4.--><structure><type>fa</type><automaton><!--The list of states.--><state id=\"0\" name=\"q0\"><x>90.0</x><y>144.0</y><initial/></state><state id=\"1\" name=\"q1\"><x>253.0</x><y>144.0</y></state><state id=\"2\" name=\"q2\"><x>67.0</x><y>33.0</y></state><state id=\"3\" name=\"q3\"><x>252.0</x><y>24.0</y><final/></state><state id=\"4\" name=\"q4\"><x>407.0</x><y>19.0</y></state><!--The list of transitions.--><transition><from>4</from><to>3</to><read>0</read></transition><transition><from>3</from><to>4</to><read>0</read></transition><transition><from>2</from><to>3</to><read>0</read></transition><transition><from>4</from><to>3</to><read>1</read></transition><transition><from>3</from><to>4</to><read>1</read></transition><transition><from>1</from><to>0</to><read>0</read></transition><transition><from>0</from><to>1</to><read>0</read></transition><transition><from>0</from><to>2</to><read>1</read></transition><transition><from>2</from><to>0</to><read>1</read></transition></automaton></structure>");
        String expected = "<loncapagrade><awarddetail>EXACT_ANS</awarddetail><message><taskresult grade=\"passed\"><tasktitle>Automat fuer den Vergleich von Dualzahlen</tasktitle><titlesvg>Automat</titlesvg><imagesvg><![CDATA[<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"655pt\" height=\"235pt\" viewBox=\"0.00 0.00 655.00 235.44\"><g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 231.44)\"><title>automaton</title><polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-231.44 651,-231.44 651,4 -4,4\" /><!-- start --><g id=\"node1\" class=\"node\"><title>start</title></g><!-- 0 --><g id=\"node2\" class=\"node\"><title>0</title><ellipse fill=\"none\" stroke=\"black\" cx=\"170.6\" cy=\"-20.64\" rx=\"20.3\" ry=\"20.3\" /><text text-anchor=\"middle\" x=\"170.6\" y=\"-16.94\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">q0</text></g><!-- start&#45;&gt;0 --><g id=\"edge1\" class=\"edge\"><title>start-&gt;0</title><path fill=\"none\" stroke=\"black\" d=\"M53.69,-20.64C78.21,-20.64 114.31,-20.64 139.89,-20.64\" /><polygon fill=\"black\" stroke=\"black\" points=\"140.15,-24.14 150.15,-20.64 140.15,-17.14 140.15,-24.14\" /></g><!-- 1 --><g id=\"node3\" class=\"node\"><title>1</title><ellipse fill=\"none\" stroke=\"black\" cx=\"405.32\" cy=\"-20.64\" rx=\"20.3\" ry=\"20.3\" /><text text-anchor=\"middle\" x=\"405.32\" y=\"-16.94\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">q1</text></g><!-- 0&#45;&gt;1 --><g id=\"edge8\" class=\"edge\"><title>0-&gt;1</title><path fill=\"none\" stroke=\"black\" d=\"M190.21,-25.46C231.28,-29.71 326.59,-30.01 375.38,-26.37\" /><polygon fill=\"black\" stroke=\"black\" points=\"375.95,-29.83 385.6,-25.47 375.34,-22.86 375.95,-29.83\" /><text text-anchor=\"middle\" x=\"279.29\" y=\"-29.72\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">0</text></g><!-- 2 --><g id=\"node4\" class=\"node\"><title>2</title><ellipse fill=\"none\" stroke=\"black\" cx=\"137.48\" cy=\"-180.48\" rx=\"20.3\" ry=\"20.3\" /><text text-anchor=\"middle\" x=\"137.48\" y=\"-176.78\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">q2</text></g><!-- 0&#45;&gt;2 --><g id=\"edge9\" class=\"edge\"><title>0-&gt;2</title><path fill=\"none\" stroke=\"black\" d=\"M161.22,-38.47C152.33,-65.5 141.3,-117.15 137.09,-150.15\" /><polygon fill=\"black\" stroke=\"black\" points=\"133.61,-149.83 135.98,-160.16 140.57,-150.61 133.61,-149.83\" /><text text-anchor=\"middle\" x=\"145.66\" y=\"-98.11\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">1</text></g><!-- 1&#45;&gt;0 --><g id=\"edge7\" class=\"edge\"><title>1-&gt;0</title><path fill=\"none\" stroke=\"black\" d=\"M385.71,-15.82C344.64,-11.57 249.33,-11.27 200.54,-14.91\" /><polygon fill=\"black\" stroke=\"black\" points=\"199.97,-11.45 190.32,-15.81 200.58,-18.42 199.97,-11.45\" /><text text-anchor=\"middle\" x=\"289.63\" y=\"-19.16\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">0</text></g><!-- 2&#45;&gt;0 --><g id=\"edge10\" class=\"edge\"><title>2-&gt;0</title><path fill=\"none\" stroke=\"black\" d=\"M146.86,-162.65C155.75,-135.62 166.78,-83.97 170.99,-50.97\" /><polygon fill=\"black\" stroke=\"black\" points=\"174.47,-51.29 172.1,-40.96 167.51,-50.51 174.47,-51.29\" /><text text-anchor=\"middle\" x=\"155.42\" y=\"-110.61\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">1</text></g><!-- 3 --><g id=\"node5\" class=\"node\"><title>3</title><ellipse fill=\"none\" stroke=\"black\" cx=\"403.88\" cy=\"-193.44\" rx=\"20.27\" ry=\"20.27\" /><ellipse fill=\"none\" stroke=\"black\" cx=\"403.88\" cy=\"-193.44\" rx=\"24.3\" ry=\"24.3\" /><text text-anchor=\"middle\" x=\"403.88\" y=\"-189.74\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">q3</text></g><!-- 2&#45;&gt;3 --><g id=\"edge4\" class=\"edge\"><title>2-&gt;3</title><path fill=\"none\" stroke=\"black\" d=\"M157.94,-181.48C203.38,-183.69 313.12,-189.02 369.37,-191.76\" /><polygon fill=\"black\" stroke=\"black\" points=\"369.39,-195.27 379.55,-192.26 369.73,-188.27 369.39,-195.27\" /><text text-anchor=\"middle\" x=\"260.16\" y=\"-190.42\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">0</text></g><!-- 4 --><g id=\"node6\" class=\"node\"><title>4</title><ellipse fill=\"none\" stroke=\"black\" cx=\"627.08\" cy=\"-200.64\" rx=\"20.3\" ry=\"20.3\" /><text text-anchor=\"middle\" x=\"627.08\" y=\"-196.94\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">q4</text></g><!-- 3&#45;&gt;4 --><g id=\"edge3\" class=\"edge\"><title>3-&gt;4</title><path fill=\"none\" stroke=\"black\" d=\"M422.82,-208.77C462.95,-222.91 556.51,-226.45 601.73,-216.11\" /><polygon fill=\"black\" stroke=\"black\" points=\"602.67,-219.48 611.37,-213.43 600.8,-212.73 602.67,-219.48\" /><text text-anchor=\"middle\" x=\"508.78\" y=\"-216.24\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">0</text></g><!-- 3&#45;&gt;4 --><g id=\"edge6\" class=\"edge\"><title>3-&gt;4</title><path fill=\"none\" stroke=\"black\" d=\"M423.77,-179.36C464.72,-167.84 558.32,-170.33 602.78,-183.57\" /><polygon fill=\"black\" stroke=\"black\" points=\"601.63,-186.88 612.22,-186.86 603.93,-180.27 601.63,-186.88\" /><text text-anchor=\"middle\" x=\"509.78\" y=\"-185.27\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">1</text></g><!-- 4&#45;&gt;3 --><g id=\"edge2\" class=\"edge\"><title>4-&gt;3</title><path fill=\"none\" stroke=\"black\" d=\"M607.43,-195.06C569.37,-189.85 485.19,-186.75 437.87,-188.42\" /><polygon fill=\"black\" stroke=\"black\" points=\"437.63,-184.93 427.8,-188.88 437.95,-191.92 437.63,-184.93\" /><text text-anchor=\"middle\" x=\"519.15\" y=\"-180.54\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">0</text></g><!-- 4&#45;&gt;3 --><g id=\"edge5\" class=\"edge\"><title>4-&gt;3</title><path fill=\"none\" stroke=\"black\" d=\"M607.11,-204.94C568.8,-207.68 484.59,-205.36 437.48,-200.64\" /><polygon fill=\"black\" stroke=\"black\" points=\"437.79,-197.16 427.46,-199.53 437.01,-204.11 437.79,-197.16\" /><text text-anchor=\"middle\" x=\"518.8\" y=\"-206.59\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">1</text></g></g></svg>]]></imagesvg><resulttext /></taskresult></message></loncapagrade>";
        Assertions.assertEquals(expected, runGraFlapBlackBoxTest(blackBoxTest));
    }

    /**
     * Tests a context free Grammar against a given Alphabet.
     */
    @Test
    void testContextFreeGrammar() {
        BlackBoxTestData blackBoxTest = new BlackBoxTestData();
        blackBoxTest.setInput("Beispiel fuer eine kontextfreie Grammatik#de#n,o,p#egt#cfg#0#-");
        blackBoxTest.setStudentAnswer("S -> E | p | n S o");
        String expected = "<loncapagrade><awarddetail>EXACT_ANS</awarddetail><message><taskresult grade=\"passed\"><tasktitle>Beispiel fuer eine kontextfreie Grammatik</tasktitle><titlesvg>Grammatik</titlesvg><imagesvg><![CDATA[<p>S -&gt; E p n S o</p>]]></imagesvg><resulttext /></taskresult></message></loncapagrade>";

        Assertions.assertEquals(expected, runGraFlapBlackBoxTest(blackBoxTest));
    }

    /**
     * Tests a non context free Grammar against a given Alphabet.
     */
    @Test
    void testNonContextFreeGrammar() {
        BlackBoxTestData blackBoxTest = new BlackBoxTestData();
        blackBoxTest.setInput("Beispiel fuer eine nicht kontextfreie Grammatik#de#u,v,w#egt#ncfg#0#-");
        blackBoxTest.setStudentAnswer("S -> w | uSv, uS -> Sw");
        String expected = "<loncapagrade><awarddetail>EXACT_ANS</awarddetail><message><taskresult grade=\"passed\"><tasktitle>Beispiel fuer eine nicht kontextfreie Grammatik</tasktitle><titlesvg>Grammatik</titlesvg><imagesvg><![CDATA[<p>S -&gt; w uSv, uS -&gt; Sw</p>]]></imagesvg><resulttext /></taskresult></message></loncapagrade>";
        Assertions.assertEquals(expected, runGraFlapBlackBoxTest(blackBoxTest));
    }

    /**
     * Tests a right regular Grammar against a given Alphabet.
     */
    @Test
    void testRightRegularGrammar() {
        BlackBoxTestData blackBoxTest = new BlackBoxTestData();
        blackBoxTest.setInput("Beispiel fuer eine rechtslineare Grammatik#de#h,i,j#egt#rl#0#-");
        blackBoxTest.setStudentAnswer("S -> E | j | hiS");
        String expected = "<loncapagrade><awarddetail>EXACT_ANS</awarddetail><message><taskresult grade=\"passed\"><tasktitle>Beispiel fuer eine rechtslineare Grammatik</tasktitle><titlesvg>Grammatik</titlesvg><imagesvg><![CDATA[<p>S -&gt; E j hiS</p>]]></imagesvg><resulttext /></taskresult></message></loncapagrade>";
        Assertions.assertEquals(expected, runGraFlapBlackBoxTest(blackBoxTest));
    }

    @Test
    void testContextFreeGrammarForGivenLanguage() {
        BlackBoxTestData blackBoxTest = new BlackBoxTestData();
        blackBoxTest.setInput("Kontextfreie Grammatik fuer gegebene Sprache#de#S -> T|V, T -> ef | e T f, V -> eef | ee V f#ggtw#cfg#64#ef%eef%eeff%eeeeff%eeefff%eeeeffff%eeeeeefff%eeeeefffff%eeeeeeeeffff%eeeeeeffffff%eeeeeeefffffff%eeeeeeeeeefffff%eeeeeeeeffffffff%eeeeeeeeeeeeffffff%eeeeeeeeefffffffff%eeeeeeeeeeffffffffff%eeeeeeeeeeeeeefffffff%eeeeeeeeeeefffffffffff%eeeeeeeeeeeeeeeeffffffff%eeeeeeeeeeeeeeeeeefffffffff%eeeeeeeeeeeeeeeeeeeeffffffffff%eeeeeeeeeeeeeeeeeeeeeefffffffffff!%f%ee%ff%fe%fff%ffe%fee%eee%eff%efe%efee%fefe%ffef%ffff%eeef%efef%feff%eeee%efffe%eeefe%efeff%feeff%effee%eefff%eeeee%eeeef%effff%eefee%fefee%ffeee%fffef%eeffe%efefe%feeef%feefe%ffffe%fefff%efeee%efeef%effef%eefef");
        blackBoxTest.setStudentAnswer("S -> T|V, T -> ef | e T f, V -> eef | ee V f");
        String expected = "<loncapagrade><awarddetail>EXACT_ANS</awarddetail><message><taskresult grade=\"passed\"><tasktitle>Kontextfreie Grammatik fuer gegebene Sprache</tasktitle><titlesvg>Grammatik</titlesvg><imagesvg><![CDATA[<p>S -&gt; T|V, T -&gt; ef e T f, V -&gt; eef ee V f</p>]]></imagesvg><resulttext /></taskresult></message></loncapagrade>";
        Assertions.assertEquals(expected, runGraFlapBlackBoxTest(blackBoxTest));
    }

    @Test
    void testGrammarForIntegers() {
        BlackBoxTestData blackBoxTest = new BlackBoxTestData();
        blackBoxTest.setInput("Grammatik fuer ganze Zahlen#de#S -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 1D | 2D | 3D | 4D | 5D | 6D | 7D | 8D | 9D | -P, P ->  1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 1D | 2D | 3D | 4D | 5D | 6D | 7D | 8D | 9D , D ->  0| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0D | 1D | 2D | 3D | 4D | 5D | 6D | 7D | 8D | 9D#ggtw#rl#62#0%9%-2%91%24%-10%-20%437%-32%350%720%887%-791%-253%-532%-268%-319%-680%-973%-807%-431!-%-0%00%-00%-1-2%00884%00687%00695%00224%00957%00855%00806%00656%00871%00292%-0090%00892%00870%00907%00-703%-00106%00-558%-00819%00-380%-00547%-00785%00-943%-00352%-00528%00-695%-00-28%-00594%-00717%-00-180%-00-328%-00-793%-00-304%-00-388%-00-384%-00-365%-00-392");
        blackBoxTest.setStudentAnswer("S -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9  \t  | 1D | 2D | 3D | 4D | 5D | 6D | 7D | 8D | 9D  | -P, P -> 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 1D | 2D | 3D | 4D | 5D | 6D | 7D | 8D | 9D, D -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9  | 0D  | 1D | 2D | 3D | 4D | 5D | 6D | 7D | 8D | 9D");
        String expected = "<loncapagrade><awarddetail>EXACT_ANS</awarddetail><message><taskresult grade=\"passed\"><tasktitle>Grammatik fuer ganze Zahlen</tasktitle><titlesvg>Grammatik</titlesvg><imagesvg><![CDATA[<p>S -&gt; 0 1 2 3 4 5 6 7 8 9  \t  1D 2D 3D 4D 5D 6D 7D 8D 9D  -P, P -&gt; 1 2 3 4 5 6 7 8 9 1D 2D 3D 4D 5D 6D 7D 8D 9D, D -&gt; 0 1 2 3 4 5 6 7 8 9  0D  1D 2D 3D 4D 5D 6D 7D 8D 9D</p>]]></imagesvg><resulttext /></taskresult></message></loncapagrade>";
        Assertions.assertEquals(expected, runGraFlapBlackBoxTest(blackBoxTest));
    }

    /**
     * Endless Loop
     */
    @Disabled
    @Test
    void testGrammarForGivenLanguage() {
        BlackBoxTestData blackBoxTest = new BlackBoxTestData();
        blackBoxTest.setInput("Grammatik fuer Sprache (enthaelt nicht ef)#de#e*|(f|g)*e*((g+f*)*e*)*#grtw#rl#80#eeeee%eeeeee%eeeeeeeeee%eeeeeeeeeee%eeeeeeeeeeee%eeeeeeeeeeeeee%eeeeeeeeeeeeeee%eeeeeeeeeeeeeeee%eeeeeeeeeeeeeeeee%eeeeeeeeeeeeeeeeee%ffeeeegffffffffffffffgffffffffffffffegffffffffffffffgffffffffffffffegffffffffffffffgffffffffffffffegffffffffffffffgffffffffffffffe%ffgfggfgfggffggfgeeeeeeeeeeeeeggggfggggfeeeeeeeeeeeggggfggggfeeeeeeeeeeeggggfggggfeeeeeeeeeeeggggfggggfeeeeeeeeeeeggggfggggfeeeeeeeeeeeggggfggggfeeeeeeeeeeeggggfggggfeeeeeeeeeee%fgffgffgfgeeeeeeeggggggggggfffffffffffffffffffggggggggggfffffffffffffffffffeeeeeeeeeeeeeeggggggggggfffffffffffffffffffggggggggggfffffffffffffffffffeeeeeeeeeeeeeeggggggggggfffffffffffffffffffggggggggggfffffffffffffffffffeeeeeeeeeeeeeeggggggggggfffffffffffffffffffggggggggggfffffffffffffffffffeeeeeeeeeeeeeeggggggggggfffffffffffffffffffggggggggggfffffffffffffffffffeeeeeeeeeeeeeeggggggggggfffffffffffffffffffggggggggggfffffffffffffffffffeeeeeeeeeeeeeeggggggggggfffffffffffffffffffggggggggggfffffffffffffffffffeeeeeeeeeeeeeeggggggggggfffffffffffffffffffggggggggggfffffffffffffffffffeeeeeeeeeeeeeeggggggggggfffffffffffffffffffggggggggggfffffffffffffffffffeeeeeeeeeeeeeeggggggggggfffffffffffffffffffggggggggggfffffffffffffffffffeeeeeeeeeeeeeeggggggggggfffffffffffffffffffggggggggggfffffffffffffffffffeeeeeeeeeeeeeeggggggggggfffffffffffffffffffggggggggggfffffffffffffffffffeeeeeeeeeeeeeeggggggggggfffffffffffffffffffggggggggggfffffffffffffffffffeeeeeeeeeeeeeeggggggggggfffffffffffffffffffggggggggggfffffffffffffffffffeeeeeeeeeeeeee%gffffgeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeee%ffgggfgggffgfffffgfgeeeeeeeeeeeeeeeeeeegggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffeeeeeeeegggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffeeeeeeeegggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffeeeeeeeegggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffgggggggggggggggffffffffffeeeeeeee%gggfggggffffffggfffeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeeegggggggggggggggggggfffffffgggggggggggggggggggfffffffgggggggggggggggggggfffffffeeee%fgggeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeeeggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffggggggggggggggffffeeeeeeeeeeeeee%ggfgeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeeeggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggeeeee%eeeeeeeeeeeeeeeeggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffeeeeeeeeeggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffeeeeeeeeeggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffeeeeeeeeeggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffeeeeeeeeeggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffeeeeeeeeeggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffeeeeeeeeeggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffeeeeeeeeeggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffeeeeeeeeeggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffeeeeeeeeeggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffeeeeeeeeeggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffeeeeeeeeeggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffeeeeeeeeeggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffggggggggggggggfffffffeeeeeeeee%gfgfffgfgfeeeeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeeegggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffgggggfffffffffeeeeeeeeeeeeeeeee!eef%gffef%egfeefg%eefefeegg%ggffgefgf%fgfgeffgff%ggegfefgff%feeggeffgf%gffffeefgee%eeggffefefe%egegeffgeee%eeggefefege%efgegegggfg%fgegggeeefee%efefgggggeef%eeffgeefffeg%egeefefeffge%ggfgffeefffg%fffeeeegeeef%eegggfeefeef%gefffgefegeg%geffeegefggff%fgefgffgfegff%egffeffffgegf%fefeegegggfgee%ggeefggfgegfgg%fefgeefgeggfgg%egffgfeeffggeg%fgefeeggffffee%fgfeegfgeeffff%fgefgegegeeege%egegeffegfffefg%efgfefgfffggeff%egggggefgggfgef%fgggfffefgggggf%ffegefegggeffff%fffeefgefgeggee%feggfgefgggfgeef%efgegffgfgeggfgf%gfggffgefefggggg%feffgegefeeggfegg%fegegeeefgeggeggf%ggffgefeffgffggeff%gfgefffeggfeffffef%gegfegfefeeeffgfeg%gfgggfffegfeeggefg%efeffffffggfgfgffe%eegeffffggeeefeeff%ffefgfeffgggggefege%fgefgefeeffgefegfef%effeggeeggfegfgffge%eegeeeffgeffggggggg%feffgegfggeffgfffeg%ffefeffeffffgggegfg%gfeefefegfgfgeeffee%efggffgegfeegffeefef%eggeegeeegefgeegeeef%geefefeegffeffgfegge%feeeefgefeffgeeggggf%ffgfefeegegffeefgegg");
        blackBoxTest.setStudentAnswer("S -> e A | f S | g S | E , A -> e A | g S | E");
        String expected = "";
        Assertions.assertEquals(expected, runGraFlapBlackBoxTest(blackBoxTest));
    }

    @Test
    void testTuringForSpMTp2M() {
        BlackBoxTestData blackBoxTest = new BlackBoxTestData();
        blackBoxTest.setInput("Turing-Automat fuer s^m t^{2 m}#de#S -> s tt | s S t t#agtw#dtm#64#stt%sstttt%ssstttttt%sssstttttttt%ssssstttttttttt%sssssstttttttttttt%ssssssstttttttttttttt%sssssssstttttttttttttttt%ssssssssstttttttttttttttttt%sssssssssstttttttttttttttttttt%ssssssssssstttttttttttttttttttttt%sssssssssssstttttttttttttttttttttttt%ssssssssssssstttttttttttttttttttttttttt%sssssssssssssstttttttttttttttttttttttttttt%ssssssssssssssstttttttttttttttttttttttttttttt%sssssssssssssssstttttttttttttttttttttttttttttttt%ssssssssssssssssstttttttttttttttttttttttttttttttttt%sssssssssssssssssstttttttttttttttttttttttttttttttttttt%ssssssssssssssssssstttttttttttttttttttttttttttttttttttttt%sssssssssssssssssssstttttttttttttttttttttttttttttttttttttttt%ssssssssssssssssssssstttttttttttttttttttttttttttttttttttttttttt%sssssssssssssssssssssstttttttttttttttttttttttttttttttttttttttttttt!%t%s%st%tt%ss%ts%tts%tst%sts%sst%sss%stss%stts%ttst%tsts%ssst%ssss%tttt%ttss%tsss%ttts%stsss%ttttt%sstss%ststs%stsst%sssts%sssss%sssst%ssstt%tssss%tstst%tsstt%tstts%ttsss%stttt%sstst%tssts%ssttt%sttts%ststt");
        blackBoxTest.setStudentAnswer("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!--Created with JFLAP 6.4.--><structure><type>turing</type><automaton><!--The list of states.--><block id=\"0\" name=\"s0\"><tag>Machine0</tag><x>42.0</x><y>94.0</y><initial/></block><block id=\"1\" name=\"sr\"><tag>Machine1</tag><x>153.0</x><y>93.0</y></block><block id=\"2\" name=\"ss\"><tag>Machine2</tag><x>302.0</x><y>94.0</y></block><block id=\"3\" name=\"s2s\"><tag>Machine3</tag><x>559.0</x><y>216.0</y></block><block id=\"4\" name=\"sz\"><tag>Machine4</tag><x>328.0</x><y>245.0</y></block><block id=\"5\" name=\"sv\"><tag>Machine5</tag><x>144.0</x><y>238.0</y></block><block id=\"6\" name=\"sf\"><tag>Machine6</tag><x>256.0</x><y>355.0</y><final/></block><!--The list of transitions.--><transition><from>1</from><to>2</to><read/><write/><move>L</move></transition><transition><from>0</from><to>1</to><read>s</read><write/><move>R</move></transition><transition><from>4</from><to>5</to><read/><write/><move>R</move></transition><transition><from>2</from><to>3</to><read>t</read><write/><move>L</move></transition><transition><from>1</from><to>1</to><read>t</read><write>t</write><move>R</move></transition><transition><from>1</from><to>1</to><read>s</read><write>s</write><move>R</move></transition><transition><from>5</from><to>1</to><read>s</read><write/><move>R</move></transition><transition><from>3</from><to>4</to><read>t</read><write/><move>L</move></transition><transition><from>4</from><to>4</to><read>t</read><write>t</write><move>L</move></transition><transition><from>4</from><to>4</to><read>s</read><write>s</write><move>L</move></transition><transition><from>5</from><to>6</to><read/><write/><move>S</move></transition><!--The list of automata--><Machine3/><Machine4/><Machine5/><Machine6/><Machine0/><Machine1/><Machine2/></automaton></structure>");
        String expected = "<loncapagrade><awarddetail>EXACT_ANS</awarddetail><message><taskresult grade=\"passed\"><tasktitle>Turing-Automat fuer s^m t^{2 m}</tasktitle><titlesvg>Automat</titlesvg><imagesvg><![CDATA[<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"947pt\" height=\"484pt\" viewBox=\"0.00 0.00 947.00 484.08\"><g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 480.08)\"><title>automaton</title><polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-480.08 943,-480.08 943,4 -4,4\" /><!-- start --><g id=\"node1\" class=\"node\"><title>start</title></g><!-- 0 --><g id=\"node2\" class=\"node\"><title>0</title><ellipse fill=\"none\" stroke=\"black\" cx=\"171.48\" cy=\"-397.64\" rx=\"18.7\" ry=\"18.7\" /><text text-anchor=\"middle\" x=\"171.48\" y=\"-393.94\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s0</text></g><!-- start&#45;&gt;0 --><g id=\"edge1\" class=\"edge\"><title>start-&gt;0</title><path fill=\"none\" stroke=\"black\" d=\"M54.57,-397.64C79.52,-397.64 116.45,-397.64 142.1,-397.64\" /><polygon fill=\"black\" stroke=\"black\" points=\"142.34,-401.14 152.34,-397.64 142.34,-394.14 142.34,-401.14\" /></g><!-- 1 --><g id=\"node3\" class=\"node\"><title>1</title><ellipse fill=\"none\" stroke=\"black\" cx=\"331.32\" cy=\"-399.08\" rx=\"18\" ry=\"18\" /><text text-anchor=\"middle\" x=\"331.32\" y=\"-395.38\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">sr</text></g><!-- 0&#45;&gt;1 --><g id=\"edge3\" class=\"edge\"><title>0-&gt;1</title><path fill=\"none\" stroke=\"black\" d=\"M190.44,-397.81C218.23,-398.06 270.22,-398.53 302.68,-398.82\" /><polygon fill=\"black\" stroke=\"black\" points=\"302.84,-402.32 312.87,-398.91 302.91,-395.32 302.84,-402.32\" /><text text-anchor=\"middle\" x=\"225.06\" y=\"-402.12\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s : E, R</text></g><!-- 1&#45;&gt;1 --><g id=\"edge6\" class=\"edge\"><title>1:ne-&gt;1:nw</title><path fill=\"none\" stroke=\"black\" d=\"M344.32,-412.08C349.82,-424.41 349.82,-439.08 331.32,-439.08 317.59,-439.08 314.05,-431 315.39,-421.79\" /><polygon fill=\"black\" stroke=\"black\" points=\"318.78,-422.66 318.32,-412.08 312.08,-420.64 318.78,-422.66\" /><text text-anchor=\"middle\" x=\"331.32\" y=\"-442.88\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">t : t, R</text></g><!-- 1&#45;&gt;1 --><g id=\"edge7\" class=\"edge\"><title>1:ne-&gt;1:nw</title><path fill=\"none\" stroke=\"black\" d=\"M344.32,-412.08C355.32,-431.75 355.32,-461.08 331.32,-461.08 310.88,-461.08 307.85,-439.81 314.19,-421.35\" /><polygon fill=\"black\" stroke=\"black\" points=\"317.45,-422.64 318.32,-412.08 311.05,-419.79 317.45,-422.64\" /><text text-anchor=\"middle\" x=\"331.32\" y=\"-464.88\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s : s, R</text></g><!-- 2 --><g id=\"node4\" class=\"node\"><title>2</title><ellipse fill=\"none\" stroke=\"black\" cx=\"545.88\" cy=\"-397.64\" rx=\"18.7\" ry=\"18.7\" /><text text-anchor=\"middle\" x=\"545.88\" y=\"-393.94\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">ss</text></g><!-- 1&#45;&gt;2 --><g id=\"edge2\" class=\"edge\"><title>1-&gt;2</title><path fill=\"none\" stroke=\"black\" d=\"M349.61,-398.96C386.87,-398.71 471.84,-398.14 516.77,-397.84\" /><polygon fill=\"black\" stroke=\"black\" points=\"517.05,-401.33 527.02,-397.77 517,-394.33 517.05,-401.33\" /><text text-anchor=\"middle\" x=\"411.69\" y=\"-402.2\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">E : E, L</text></g><!-- 3 --><g id=\"node5\" class=\"node\"><title>3</title><ellipse fill=\"none\" stroke=\"black\" cx=\"915.96\" cy=\"-221.96\" rx=\"23\" ry=\"23\" /><text text-anchor=\"middle\" x=\"915.96\" y=\"-218.26\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s2s</text></g><!-- 2&#45;&gt;3 --><g id=\"edge5\" class=\"edge\"><title>2-&gt;3</title><path fill=\"none\" stroke=\"black\" d=\"M563.23,-389.4C621.63,-361.68 811.51,-271.54 885.79,-236.28\" /><polygon fill=\"black\" stroke=\"black\" points=\"887.54,-239.33 895.07,-231.88 884.53,-233 887.54,-239.33\" /><text text-anchor=\"middle\" x=\"705.01\" y=\"-316.64\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">t : E, L</text></g><!-- 4 --><g id=\"node6\" class=\"node\"><title>4</title><ellipse fill=\"none\" stroke=\"black\" cx=\"583.32\" cy=\"-180.2\" rx=\"18.7\" ry=\"18.7\" /><text text-anchor=\"middle\" x=\"583.32\" y=\"-176.5\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">sz</text></g><!-- 3&#45;&gt;4 --><g id=\"edge9\" class=\"edge\"><title>3-&gt;4</title><path fill=\"none\" stroke=\"black\" d=\"M893.36,-219.12C834.63,-211.75 677.25,-191.99 612.14,-183.82\" /><polygon fill=\"black\" stroke=\"black\" points=\"612.51,-180.34 602.15,-182.56 611.64,-187.28 612.51,-180.34\" /><text text-anchor=\"middle\" x=\"733.25\" y=\"-205.27\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">t : E, L</text></g><!-- 4&#45;&gt;4 --><g id=\"edge10\" class=\"edge\"><title>4:ne-&gt;4:nw</title><path fill=\"none\" stroke=\"black\" d=\"M596.32,-193.2C601.82,-206.38 601.82,-221.05 583.32,-221.05 569.3,-221.05 565.91,-212.63 567.48,-202.81\" /><polygon fill=\"black\" stroke=\"black\" points=\"570.84,-203.78 570.32,-193.2 564.13,-201.8 570.84,-203.78\" /><text text-anchor=\"middle\" x=\"583.32\" y=\"-224.85\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">t : t, L</text></g><!-- 4&#45;&gt;4 --><g id=\"edge11\" class=\"edge\"><title>4:ne-&gt;4:nw</title><path fill=\"none\" stroke=\"black\" d=\"M596.32,-193.2C607.32,-213.71 607.32,-243.05 583.32,-243.05 562.79,-243.05 559.82,-221.58 566.28,-202.53\" /><polygon fill=\"black\" stroke=\"black\" points=\"569.56,-203.77 570.32,-193.2 563.13,-200.99 569.56,-203.77\" /><text text-anchor=\"middle\" x=\"583.32\" y=\"-246.85\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s : s, L</text></g><!-- 5 --><g id=\"node7\" class=\"node\"><title>5</title><ellipse fill=\"none\" stroke=\"black\" cx=\"318.36\" cy=\"-190.28\" rx=\"18.7\" ry=\"18.7\" /><text text-anchor=\"middle\" x=\"318.36\" y=\"-186.58\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">sv</text></g><!-- 4&#45;&gt;5 --><g id=\"edge4\" class=\"edge\"><title>4-&gt;5</title><path fill=\"none\" stroke=\"black\" d=\"M564.26,-180.92C518.43,-182.67 401.8,-187.11 347.28,-189.18\" /><polygon fill=\"black\" stroke=\"black\" points=\"347.1,-185.68 337.24,-189.56 347.37,-192.68 347.1,-185.68\" /><text text-anchor=\"middle\" x=\"433.27\" y=\"-188.85\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">E : E, R</text></g><!-- 5&#45;&gt;1 --><g id=\"edge8\" class=\"edge\"><title>5-&gt;1</title><path fill=\"none\" stroke=\"black\" d=\"M319.53,-209.18C321.82,-246.01 326.88,-327.57 329.57,-370.85\" /><polygon fill=\"black\" stroke=\"black\" points=\"326.08,-371.21 330.2,-380.97 333.07,-370.77 326.08,-371.21\" /><text text-anchor=\"middle\" x=\"303.05\" y=\"-293.81\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">s : E, R</text></g><!-- 6 --><g id=\"node8\" class=\"node\"><title>6</title><ellipse fill=\"none\" stroke=\"black\" cx=\"479.64\" cy=\"-21.8\" rx=\"18\" ry=\"18\" /><ellipse fill=\"none\" stroke=\"black\" cx=\"479.64\" cy=\"-21.8\" rx=\"22\" ry=\"22\" /><text text-anchor=\"middle\" x=\"479.64\" y=\"-18.1\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">sf</text></g><!-- 5&#45;&gt;6 --><g id=\"edge12\" class=\"edge\"><title>5-&gt;6</title><path fill=\"none\" stroke=\"black\" d=\"M331.56,-176.49C359.12,-147.71 423.04,-80.93 457.18,-45.26\" /><polygon fill=\"black\" stroke=\"black\" points=\"460.01,-47.37 464.39,-37.73 454.95,-42.53 460.01,-47.37\" /><text text-anchor=\"middle\" x=\"372.87\" y=\"-114.68\" font-family=\"Times New Roman,serif\" font-size=\"14.00\">E : E, S</text></g></g></svg>]]></imagesvg><resulttext /></taskresult></message></loncapagrade>";
        Assertions.assertEquals(expected, runGraFlapBlackBoxTest(blackBoxTest));
    }


    /**
     * Resets System.out and closes Outputstream.
     */
    @AfterAll
    static void cleanup() {
        System.setOut(systemOut);
        captureStream.close();
        try {
            capture.close();
        }catch(IOException e) {
            e.printStackTrace();
        }
    }
}
